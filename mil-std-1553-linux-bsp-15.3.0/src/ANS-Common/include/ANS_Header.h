/* SPDX-FileCopyrightText: 2013-2021 AIM GmbH <info@aim-online.com> */
/* SPDX-License-Identifier: MIT  */

/*! \file ANS_Header.h
 *
 * This file contains the definition of the common ANS frame header.
 *
 *
 ******************************************************************************/
#ifndef ANS_HEADER_H
#define ANS_HEADER_H

/* Includes *******************************************************************/

#include "ANS_Types.h"
#include "Ai_cdef.h"
#include "ANS_Connection.h"
#include "ANS_MemChunk.h"

/* Constants ******************************************************************/

/* Macros *********************************************************************/

/* Type definitions ***********************************************************/

/**
 * Definition of the ANS Header.
 * All regular ANS commands and responses use this header format.
 */
#pragma pack(1)
typedef struct tagANS_Header_t
{
    AiUInt32 transactionId;     /*!< ID of the transaction                  */
    AiUInt32 transactionSize;   /*!< Payload size of transaction in bytes   */
    AiUInt32 fragmentIndex;     /*!< Index to identify the current fragment */
                                /*!< (reserved for future use)              */
    AiUInt32 fragmentPayloadSize;
                                /*!< Payload size of current fragment       */
                                /*!< (reserved for future use)              */
    AiUInt32 clientId;          /*!< Unique Client ID, generated by the     */
                                /*!< server for identification purposes     */
    
}  ANS_Header;
#pragma pack()

/* Prototypes *****************************************************************/

extern	AnsStatus	ANS_Header_read2Buffer (
    struct AnsConnection* connection,
    unsigned long const timeOutMs,
    MemChunk        *pRxBuffer);

extern AnsStatus ANS_Header_create(
    AiUInt32 const  transactionId,
    AiUInt32 const  transactionSize,
    AiUInt32 const  fragmentIndex,
    AiUInt32 const  fragmentPayloadSize,
    AiUInt32 const  clientId,
    MemChunk        *pBuffer);

#endif  /* ANS_HEADER_H */
