From 2d066e932dc164933221739806035a4b71c673b7 Mon Sep 17 00:00:00 2001
From: Martin Haag <haag@aim-online.com>
Date: Fri, 10 Jul 2020 11:29:38 +0200
Subject: [PATCH] Centos 7 patch

---
 src/aim_nl.c         | 12 +++++++-----
 src/aim_pci_module.h |  2 +-
 2 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/src/aim_nl.c b/src/aim_nl.c
index cbb86f2..faf2794 100644
--- a/src/aim_nl.c
+++ b/src/aim_nl.c
@@ -29,7 +29,8 @@ int aim_nl_dev_setup(struct aim_pci_device* aimDevice)
     aim_dev_debug(aimDevice, "Family has %zu operations", nl_setup->num_ops);
     aim_dev_debug(aimDevice, "Family has %zu multicast groups", nl_setup->num_groups);
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4,10,0))
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,10,0)
+  #if RHEL_MINOR >= 5
     nl_setup->family.module   = THIS_MODULE;
     nl_setup->family.ops      = nl_setup->ops;
     nl_setup->family.n_ops    = nl_setup->num_ops;
@@ -37,9 +38,10 @@ int aim_nl_dev_setup(struct aim_pci_device* aimDevice)
     nl_setup->family.n_mcgrps = nl_setup->num_groups;
 
     ret = genl_register_family(&nl_setup->family);
-#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3,13,0))
+  #else
     ret = _genl_register_family_with_ops_grps(&nl_setup->family, nl_setup->ops, nl_setup->num_ops,
                                               nl_setup->groups, nl_setup->num_groups);
+  #endif
 #else
     {
         size_t i = 0;
@@ -120,7 +122,7 @@ void aim_nl_dev_release(struct aim_pci_device* aimDevice)
 
         genl_unregister_family(&nl_setup->family);
 
-        #if LINUX_VERSION_CODE < KERNEL_VERSION(3,13,0)
+        #if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
 
         /* Before kernel 3.13, the genl_multicast_group structure have been dynamically allocated
          * and need to be freed.
@@ -143,7 +145,7 @@ static int __inline__ aim_nl_get_genl_group_id(struct aim_pci_device* aimDevice,
 {
     BUG_ON(!aimDevice || family_id >= aimDevice->nl_setup.num_groups);
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,13,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,10,0)
     return family_id;
 #else
     return aimDevice->nl_setup.groups[family_id].id;
@@ -206,7 +208,7 @@ int aim_nl_mc_send_sba(struct aim_pci_device* aimDevice, int family_group, int c
         return ret;
     }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,13,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,10,0)
     ret = genlmsg_multicast(&nl_setup->family, skb, 0, genl_group, GFP_ATOMIC);
 #else
     ret = genlmsg_multicast(skb, 0, genl_group, 0);
diff --git a/src/aim_pci_module.h b/src/aim_pci_module.h
index b58e050..27ce806 100644
--- a/src/aim_pci_module.h
+++ b/src/aim_pci_module.h
@@ -19,7 +19,7 @@
 /* reinit_completion replaced INIT_COMPLETION macro since
    Kernel 3.13
 */
-#if LINUX_VERSION_CODE < KERNEL_VERSION(3,13,0)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
 static inline void reinit_completion(struct completion* c)
 {
     INIT_COMPLETION(*c);
-- 
2.11.0

